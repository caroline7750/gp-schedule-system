import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class FirstScreen extends javax.swing.JFrame {
    public Schedule schedule;
    /**
     * Creates new form FirstScreen
     */
    
    Schedule s = new Schedule();
    Person user;
    
    public FirstScreen() {
        initComponents();
        studentPanel.setVisible(false);
        warningLabel.setVisible(false);
        teacherPanel.setVisible(false);
        studentMenu.setVisible(false);
        teacherMenu.setVisible(false);
        SeeVisitingGPStudents.setVisible(false);
        SeeAssignedGPStudents.setVisible(false);
        adminPanel.setVisible(false);
        StudentOpenCSV.setVisible(false);
        TeacherOpenCSV.setVisible(false);
        SuccessImport.setVisible(false);
        SelectStudent.setEnabled(true);
        capacityFullNotice.setVisible(false);
        successSelectNotice.setVisible(false);
        capacityTooLargeLabel.setVisible(false);
        deselectionNotice.setVisible(false);
        //panels' visibility
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //set student list
        //1. get schedule func
        //2. init schedule class
        //2. 
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FirstScreenStudent = new javax.swing.JFrame();
        StudentFirstScreen = new javax.swing.JFrame();
        jLabel5 = new javax.swing.JLabel();
        StudentButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        GoHomeScreenTeacherMenu1 = new javax.swing.JButton();
        firstPanel = new javax.swing.JPanel();
        AdminButton = new javax.swing.JButton();
        StudentButton = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        selectText = new javax.swing.JLabel();
        TeacherButton = new javax.swing.JButton();
        studentPanel = new javax.swing.JPanel();
        ProgramTitle = new javax.swing.JLabel();
        SelectStudent = new javax.swing.JComboBox<>();
        SelectText = new javax.swing.JLabel();
        GoHomeScreenStudentPanel = new javax.swing.JButton();
        studentMenu = new javax.swing.JPanel();
        prog_title = new javax.swing.JLabel();
        capacityFullNotice = new javax.swing.JLabel();
        teacher_options = new javax.swing.JComboBox<>();
        chooseTeacherTxt = new javax.swing.JLabel();
        why_teacher_txt = new javax.swing.JTextField();
        explainMovingTxt = new javax.swing.JLabel();
        guidingtxt1 = new javax.swing.JLabel();
        successSelectNotice = new javax.swing.JLabel();
        GoHomeScreenStudent = new javax.swing.JButton();
        deselectionNotice = new javax.swing.JLabel();
        teacherPanel = new javax.swing.JPanel();
        SelectTeacher = new javax.swing.JComboBox<>();
        progTitle = new javax.swing.JLabel();
        selectTxt = new javax.swing.JLabel();
        GoHomeScreenTeacherPanel = new javax.swing.JButton();
        teacherMenu = new javax.swing.JPanel();
        prog_title_txt = new javax.swing.JLabel();
        seeVisibleGP = new javax.swing.JButton();
        manageAssignedGP = new javax.swing.JButton();
        GoHomeScreenTeacherMenu = new javax.swing.JButton();
        SeeVisitingGPStudents = new javax.swing.JPanel();
        program_txt_title = new javax.swing.JLabel();
        visiStudentScroll = new javax.swing.JScrollPane();
        visiStudentList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ReasonsScroll = new javax.swing.JScrollPane();
        ListReasons = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        checkStudent2 = new javax.swing.JCheckBox();
        checkStudent3 = new javax.swing.JCheckBox();
        checkStudent1 = new javax.swing.JCheckBox();
        checkStudent4 = new javax.swing.JCheckBox();
        checkStudent5 = new javax.swing.JCheckBox();
        enter_capacity = new javax.swing.JTextField();
        set_capacity_txt = new javax.swing.JLabel();
        GoBackOptions = new javax.swing.JButton();
        checkStudent6 = new javax.swing.JCheckBox();
        checkStudent7 = new javax.swing.JCheckBox();
        checkStudent8 = new javax.swing.JCheckBox();
        checkStudent9 = new javax.swing.JCheckBox();
        checkStudent10 = new javax.swing.JCheckBox();
        capacityTooLargeLabel = new javax.swing.JLabel();
        SeeAssignedGPStudents = new javax.swing.JPanel();
        assignedStudentScroll = new javax.swing.JScrollPane();
        assignedStudentList = new javax.swing.JList<>();
        noMovement = new javax.swing.JCheckBox();
        assignedPresent = new javax.swing.JScrollPane();
        AssignedStudentLocations = new javax.swing.JList<>();
        verifiedStatus = new javax.swing.JLabel();
        studentsLocations = new javax.swing.JLabel();
        AssignedStudents = new javax.swing.JLabel();
        VerifiedScrollPane = new javax.swing.JScrollPane();
        VerifiedList = new javax.swing.JList<>();
        GoBackOptions1 = new javax.swing.JButton();
        adminPanel = new javax.swing.JPanel();
        selectingAdminOption = new javax.swing.JLabel();
        importTeachers = new javax.swing.JButton();
        importStudents = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        warningLabel = new javax.swing.JLabel();
        TeacherOpenCSV = new javax.swing.JPanel();
        TeacherFileChooser = new javax.swing.JFileChooser();
        StudentOpenCSV = new javax.swing.JPanel();
        StudentFileChooser = new javax.swing.JFileChooser();
        SuccessImport = new javax.swing.JPanel();
        SuccessImportTxt = new javax.swing.JLabel();
        GoHomeScreen = new javax.swing.JButton();

        javax.swing.GroupLayout FirstScreenStudentLayout = new javax.swing.GroupLayout(FirstScreenStudent.getContentPane());
        FirstScreenStudent.getContentPane().setLayout(FirstScreenStudentLayout);
        FirstScreenStudentLayout.setHorizontalGroup(
            FirstScreenStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        FirstScreenStudentLayout.setVerticalGroup(
            FirstScreenStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout StudentFirstScreenLayout = new javax.swing.GroupLayout(StudentFirstScreen.getContentPane());
        StudentFirstScreen.getContentPane().setLayout(StudentFirstScreenLayout);
        StudentFirstScreenLayout.setHorizontalGroup(
            StudentFirstScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        StudentFirstScreenLayout.setVerticalGroup(
            StudentFirstScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel5.setText("Select Yourself:");

        StudentButton1.setText("Student");
        StudentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        GoHomeScreenTeacherMenu1.setText("Go to Home Screen");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AdminButton.setText("Admin");
        AdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminButtonActionPerformed(evt);
            }
        });

        StudentButton.setText("Student");
        StudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentButtonActionPerformed(evt);
            }
        });

        title.setText("GP Schedule System");

        selectText.setText("Select Yourself:");

        TeacherButton.setText("Teacher");
        TeacherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeacherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout firstPanelLayout = new javax.swing.GroupLayout(firstPanel);
        firstPanel.setLayout(firstPanelLayout);
        firstPanelLayout.setHorizontalGroup(
            firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstPanelLayout.createSequentialGroup()
                .addGroup(firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(firstPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(StudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(firstPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(selectText))
                    .addGroup(firstPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(firstPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstPanelLayout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addComponent(title)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        firstPanelLayout.setVerticalGroup(
            firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(selectText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TeacherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(AdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(firstPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(254, Short.MAX_VALUE)))
        );

        ProgramTitle.setText("GP Schedule System - Student Home Screen");

        SelectStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectStudentActionPerformed(evt);
            }
        });

        SelectText.setText("Select Yourself:");

        GoHomeScreenStudentPanel.setText("Go to Home Screen");
        GoHomeScreenStudentPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoHomeScreenStudentPanelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPanelLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(ProgramTitle)
                .addGap(59, 59, 59))
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(SelectText)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GoHomeScreenStudentPanel)
                    .addComponent(SelectStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProgramTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SelectText)
                .addGap(18, 18, 18)
                .addComponent(SelectStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(GoHomeScreenStudentPanel)
                .addGap(68, 68, 68))
        );

        prog_title.setText("GP Schedule System");

        capacityFullNotice.setText("Sorry, that teacher's capacity is full");

        teacher_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Teacher" }));
        teacher_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacher_optionsActionPerformed(evt);
            }
        });

        chooseTeacherTxt.setText("Choose the GP teacher");

        why_teacher_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                why_teacher_txtActionPerformed(evt);
            }
        });

        explainMovingTxt.setText("Tell the teacher why you are coming");

        guidingtxt1.setText("Select the Teacher You Will be Visiting");

        successSelectNotice.setText("You are able to visit that teacher");

        GoHomeScreenStudent.setText("Go to Home Screen");
        GoHomeScreenStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoHomeScreenStudentActionPerformed(evt);
            }
        });

        deselectionNotice.setText("You have deselected that teacher and are not moving during GP ");

        javax.swing.GroupLayout studentMenuLayout = new javax.swing.GroupLayout(studentMenu);
        studentMenu.setLayout(studentMenuLayout);
        studentMenuLayout.setHorizontalGroup(
            studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentMenuLayout.createSequentialGroup()
                .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentMenuLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(prog_title))
                    .addGroup(studentMenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(studentMenuLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(why_teacher_txt))
                            .addComponent(teacher_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(explainMovingTxt)
                            .addComponent(chooseTeacherTxt))))
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GoHomeScreenStudent)
                .addGap(14, 14, 14))
            .addGroup(studentMenuLayout.createSequentialGroup()
                .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentMenuLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guidingtxt1)
                            .addComponent(capacityFullNotice)))
                    .addGroup(studentMenuLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(deselectionNotice)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(studentMenuLayout.createSequentialGroup()
                    .addGap(79, 79, 79)
                    .addComponent(successSelectNotice)
                    .addContainerGap(180, Short.MAX_VALUE)))
        );
        studentMenuLayout.setVerticalGroup(
            studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prog_title, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(guidingtxt1)
                .addGap(18, 18, 18)
                .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teacher_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseTeacherTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(why_teacher_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(explainMovingTxt))
                .addGap(44, 44, 44)
                .addComponent(capacityFullNotice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deselectionNotice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(GoHomeScreenStudent)
                .addGap(14, 14, 14))
            .addGroup(studentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentMenuLayout.createSequentialGroup()
                    .addContainerGap(180, Short.MAX_VALUE)
                    .addComponent(successSelectNotice)
                    .addGap(116, 116, 116)))
        );

        SelectTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectTeacherActionPerformed(evt);
            }
        });

        progTitle.setText("GP Schedule System - Teacher Home Screen");

        selectTxt.setText("Select Yourself:");

        GoHomeScreenTeacherPanel.setText("Go to Home Screen");
        GoHomeScreenTeacherPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoHomeScreenTeacherPanelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teacherPanelLayout = new javax.swing.GroupLayout(teacherPanel);
        teacherPanel.setLayout(teacherPanelLayout);
        teacherPanelLayout.setHorizontalGroup(
            teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teacherPanelLayout.createSequentialGroup()
                .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(teacherPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(progTitle))
                    .addGroup(teacherPanelLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(SelectTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GoHomeScreenTeacherPanel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(teacherPanelLayout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(selectTxt)
                    .addContainerGap(148, Short.MAX_VALUE)))
        );
        teacherPanelLayout.setVerticalGroup(
            teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teacherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GoHomeScreenTeacherPanel))
                .addContainerGap())
            .addGroup(teacherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(teacherPanelLayout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(selectTxt)
                    .addContainerGap(42, Short.MAX_VALUE)))
        );

        prog_title_txt.setText("GP Schedule System");

        seeVisibleGP.setText("Manage Coming to GP");
        seeVisibleGP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeVisibleGPActionPerformed(evt);
            }
        });

        manageAssignedGP.setText("Manage Assigned GP Students");
        manageAssignedGP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageAssignedGPActionPerformed(evt);
            }
        });

        GoHomeScreenTeacherMenu.setText("Go to Home Screen");
        GoHomeScreenTeacherMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoHomeScreenTeacherMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teacherMenuLayout = new javax.swing.GroupLayout(teacherMenu);
        teacherMenu.setLayout(teacherMenuLayout);
        teacherMenuLayout.setHorizontalGroup(
            teacherMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teacherMenuLayout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(teacherMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(seeVisibleGP, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageAssignedGP, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
            .addGroup(teacherMenuLayout.createSequentialGroup()
                .addGroup(teacherMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(teacherMenuLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(prog_title_txt))
                    .addGroup(teacherMenuLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(GoHomeScreenTeacherMenu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        teacherMenuLayout.setVerticalGroup(
            teacherMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teacherMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prog_title_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(manageAssignedGP, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(seeVisibleGP, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(GoHomeScreenTeacherMenu)
                .addGap(24, 24, 24))
        );

        program_txt_title.setText("GP Schedule System");

        visiStudentScroll.setViewportView(visiStudentList);

        jLabel1.setText("List of Reasons");

        jLabel3.setText("List of Visiting Students");

        ReasonsScroll.setViewportView(ListReasons);

        jLabel4.setText("Verify Presence");

        checkStudent2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent2ActionPerformed(evt);
            }
        });

        checkStudent3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent3ActionPerformed(evt);
            }
        });

        checkStudent1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent1ActionPerformed(evt);
            }
        });

        checkStudent4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent4ActionPerformed(evt);
            }
        });

        checkStudent5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent5ActionPerformed(evt);
            }
        });

        enter_capacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enter_capacityActionPerformed(evt);
            }
        });

        set_capacity_txt.setText("Set Max Number of Visiting Students");

        GoBackOptions.setText("Go back to Options");
        GoBackOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoBackOptionsActionPerformed(evt);
            }
        });

        checkStudent6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent6ActionPerformed(evt);
            }
        });

        checkStudent7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent7ActionPerformed(evt);
            }
        });

        checkStudent8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent8ActionPerformed(evt);
            }
        });

        checkStudent9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent9ActionPerformed(evt);
            }
        });

        checkStudent10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudent10ActionPerformed(evt);
            }
        });

        capacityTooLargeLabel.setText("capacity must be less than or equal to 10");

        javax.swing.GroupLayout SeeVisitingGPStudentsLayout = new javax.swing.GroupLayout(SeeVisitingGPStudents);
        SeeVisitingGPStudents.setLayout(SeeVisitingGPStudentsLayout);
        SeeVisitingGPStudentsLayout.setHorizontalGroup(
            SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SeeVisitingGPStudentsLayout.createSequentialGroup()
                .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(checkStudent9))
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(visiStudentScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(ReasonsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                        .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkStudent4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkStudent5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkStudent6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkStudent7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkStudent8, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(222, 222, 222)
                        .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkStudent2)
                            .addComponent(checkStudent1)))
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkStudent3))
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(program_txt_title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SeeVisitingGPStudentsLayout.createSequentialGroup()
                .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(GoBackOptions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(set_capacity_txt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enter_capacity, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(capacityTooLargeLabel)
                        .addGap(100, 100, 100)))
                .addComponent(checkStudent10)
                .addContainerGap())
        );
        SeeVisitingGPStudentsLayout.setVerticalGroup(
            SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(program_txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkStudent3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addComponent(checkStudent2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visiStudentScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReasonsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addGroup(SeeVisitingGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(enter_capacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(set_capacity_txt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(capacityTooLargeLabel))
                            .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                                .addComponent(GoBackOptions)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(SeeVisitingGPStudentsLayout.createSequentialGroup()
                        .addComponent(checkStudent4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStudent10)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        assignedStudentScroll.setViewportView(assignedStudentList);

        noMovement.setText("no movement");
        noMovement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noMovementActionPerformed(evt);
            }
        });

        assignedPresent.setViewportView(AssignedStudentLocations);

        verifiedStatus.setText("Verified");

        studentsLocations.setText("Students' Locations");

        AssignedStudents.setText("Assigned Students");

        VerifiedScrollPane.setViewportView(VerifiedList);

        GoBackOptions1.setText("Go back to Options");
        GoBackOptions1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoBackOptions1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SeeAssignedGPStudentsLayout = new javax.swing.GroupLayout(SeeAssignedGPStudents);
        SeeAssignedGPStudents.setLayout(SeeAssignedGPStudentsLayout);
        SeeAssignedGPStudentsLayout.setHorizontalGroup(
            SeeAssignedGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeeAssignedGPStudentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SeeAssignedGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SeeAssignedGPStudentsLayout.createSequentialGroup()
                        .addComponent(assignedStudentScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(assignedPresent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(VerifiedScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SeeAssignedGPStudentsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(noMovement)
                        .addGap(14, 14, 14))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SeeAssignedGPStudentsLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(AssignedStudents)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(studentsLocations)
                .addGap(188, 188, 188)
                .addComponent(verifiedStatus)
                .addGap(144, 144, 144))
            .addGroup(SeeAssignedGPStudentsLayout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(GoBackOptions1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SeeAssignedGPStudentsLayout.setVerticalGroup(
            SeeAssignedGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeeAssignedGPStudentsLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(SeeAssignedGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verifiedStatus)
                    .addComponent(studentsLocations)
                    .addComponent(AssignedStudents))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SeeAssignedGPStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assignedStudentScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignedPresent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VerifiedScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(GoBackOptions1)
                .addGap(12, 12, 12)
                .addComponent(noMovement)
                .addGap(16, 16, 16))
        );

        selectingAdminOption.setText("Select one of the options:");

        importTeachers.setText("import teachers");
        importTeachers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTeachersActionPerformed(evt);
            }
        });

        importStudents.setText("import students");
        importStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importStudentsActionPerformed(evt);
            }
        });

        jLabel2.setText("enter a CSV with name, ID, and teacher");

        jLabel6.setText("enter a CSV with name and ID");

        warningLabel.setText("teacher list is empty - please enter teachers before students");

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(selectingAdminOption, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(adminPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(warningLabel))
                            .addGroup(adminPanelLayout.createSequentialGroup()
                                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(importTeachers)
                                    .addComponent(importStudents))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectingAdminOption, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importTeachers)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(importStudents)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TeacherFileChooser.setApproveButtonText("");
        TeacherFileChooser.setApproveButtonToolTipText("");
        TeacherFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeacherFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TeacherOpenCSVLayout = new javax.swing.GroupLayout(TeacherOpenCSV);
        TeacherOpenCSV.setLayout(TeacherOpenCSVLayout);
        TeacherOpenCSVLayout.setHorizontalGroup(
            TeacherOpenCSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TeacherOpenCSVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TeacherFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TeacherOpenCSVLayout.setVerticalGroup(
            TeacherOpenCSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TeacherOpenCSVLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TeacherFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        StudentFileChooser.setApproveButtonText("");
        StudentFileChooser.setApproveButtonToolTipText("");
        StudentFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout StudentOpenCSVLayout = new javax.swing.GroupLayout(StudentOpenCSV);
        StudentOpenCSV.setLayout(StudentOpenCSVLayout);
        StudentOpenCSVLayout.setHorizontalGroup(
            StudentOpenCSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentOpenCSVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StudentFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        StudentOpenCSVLayout.setVerticalGroup(
            StudentOpenCSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentOpenCSVLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StudentFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        SuccessImportTxt.setText("You have successfully imported!");

        GoHomeScreen.setText("Go to Home Screen");
        GoHomeScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoHomeScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SuccessImportLayout = new javax.swing.GroupLayout(SuccessImport);
        SuccessImport.setLayout(SuccessImportLayout);
        SuccessImportLayout.setHorizontalGroup(
            SuccessImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuccessImportLayout.createSequentialGroup()
                .addGroup(SuccessImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SuccessImportLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(SuccessImportTxt))
                    .addGroup(SuccessImportLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(GoHomeScreen)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        SuccessImportLayout.setVerticalGroup(
            SuccessImportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuccessImportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SuccessImportTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(GoHomeScreen))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(firstPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(689, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(studentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(teacherPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(studentMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(teacherMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(SeeVisitingGPStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(adminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(StudentOpenCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(TeacherOpenCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(SeeAssignedGPStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(SuccessImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(firstPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(studentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(teacherPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(studentMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(teacherMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(SeeVisitingGPStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(adminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(StudentOpenCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(TeacherOpenCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(SeeAssignedGPStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(SuccessImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void StudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentButtonActionPerformed
        firstPanel.setVisible(false);
        studentPanel.setVisible(true);
    }//GEN-LAST:event_StudentButtonActionPerformed

    private void AdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminButtonActionPerformed
        firstPanel.setVisible(false);
        adminPanel.setVisible(true);
    }//GEN-LAST:event_AdminButtonActionPerformed

    private void SelectTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectTeacherActionPerformed
        teacherPanel.setVisible(false);
        teacherMenu.setVisible(true);
        if (s.getTeachers()!= null)
        {
            String selectedStr = "" + SelectTeacher.getSelectedItem();
            String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
            user = s.getTeacherFromID(Integer.parseInt(idParse + ""));
        }
        
    }//GEN-LAST:event_SelectTeacherActionPerformed

    private void SelectStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectStudentActionPerformed
        capacityFullNotice.setVisible(false);
        deselectionNotice.setVisible(false);
        studentPanel.setVisible(false);
        //need to test if student able to move (or if GP frozen)
        studentMenu.setVisible(true);
        if (s.getStudents()!= null)
        {
            String selectedStr = "" + SelectStudent.getSelectedItem();
            String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
            user = s.getStudentFromID(Integer.parseInt(idParse));
        }
        
        if (s.getStudents() != null && s.getTeachers() != null)
        {
            if (teacher_options.getItemCount() > 1)
            {
                teacher_options.removeAllItems();
                teacher_options.insertItemAt("No Teacher", 0);
            }
            String[] teachers = s.getTeachersForCombo();
            
            for(int i = 0; i < teachers.length; i ++)
            {
                String selectedStr = "" + teachers[i];
                String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
                if (Integer.parseInt(idParse) != s.getStudentFromID(user.getID()).get_teacher().getID()
                && unique_ID(Integer.parseInt(idParse), teacher_options)) 
                {
                    teacher_options.insertItemAt(teachers[i], 0); //won't auto-select
                }

            }
        }
    }//GEN-LAST:event_SelectStudentActionPerformed

    private void why_teacher_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_why_teacher_txtActionPerformed
        if (successSelectNotice.isVisible())
        {
            String text = why_teacher_txt.getText();
            ((Student) user).setWhy_teacher(text);
            successSelectNotice.setText("You have selected " + ((Student)user).getVisiTeacher().getName() + " " + ((Student)user).getVisiTeacher().getID() + " because " + text);
            why_teacher_txt.setText("");
        }
    }//GEN-LAST:event_why_teacher_txtActionPerformed

    private void updateVisiStudents()
    {
        javax.swing.JCheckBox[] checkboxes = {checkStudent1,checkStudent2, checkStudent3, checkStudent4, 
                               checkStudent5, checkStudent6, checkStudent7, checkStudent8, 
                               checkStudent9, checkStudent10};
        for (int i = 0; i < 10; i ++)
        {
            checkboxes[i].setVisible(false);
        }
        if (s.getTeachers() != null && s.getStudents() != null && ((Teacher)user).getvStudentCount()!= 0)
        {
            visiStudentList.setListData(((Teacher)user).getVisiStudentsForList());
            try
            {
                ListReasons.setListData(((Teacher)user).getReasonsForList());
            }
            catch (NullPointerException e)
            {
               String[] sarr = {" "};
               ListReasons.setListData(sarr); 
            }
        }
        else if (((Teacher)user).getvStudentCount()== 0)
        {
            String[] sarr = {" "};
            visiStudentList.setListData(sarr);
            ListReasons.setListData(sarr); 
        }
        
        for (int i = 0; i < ((Teacher)user).getvStudentCount(); i++)
        {
            checkboxes[i].setVisible(true);
            try
            {
                checkboxes[i].setText(((Teacher)user).getVisiStudentsForList()[i]);
            }
            catch (ArrayIndexOutOfBoundsException e)
            {
               checkboxes[i].setText(" "); 
            }
        }
    }
    
    private void enter_capacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enter_capacityActionPerformed
        int capacity = Integer.parseInt(enter_capacity.getText());
        if (capacity <= 10)
        {
            ((Teacher) user).setCapacity(capacity);
            capacityTooLargeLabel.setVisible(false);
        }
        else
            capacityTooLargeLabel.setVisible(true);
        if (capacity < ((Teacher)(user)).getvStudentCount())
        {
            PersonLinkedList vStudents = ((Teacher)user).getVisiStudents();
            for (int i = capacity; i < ((Teacher)(user)).getvStudentCount(); i++)
            {
                ((Student)(vStudents.get(i))).deselect_teacher();
                 vStudents.remove(i);
            }
            ((Teacher)user).setVisiStudents(vStudents);
            ((Teacher)user).setvStudentCount();
            updateVisiStudents();
        }
    }//GEN-LAST:event_enter_capacityActionPerformed

    private void seeVisibleGPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeVisibleGPActionPerformed
        teacherMenu.setVisible(false);
        SeeVisitingGPStudents.setVisible(true);
        updateVisiStudents();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_seeVisibleGPActionPerformed

    private void StudentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentButton1ActionPerformed
        //show option to import CSV
        //maybe do it so students & teachers on same frame
        //import CSV
        //parse CSV for name & ID

    }//GEN-LAST:event_StudentButton1ActionPerformed

    private void TeacherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeacherButtonActionPerformed
        firstPanel.setVisible(false);
        teacherPanel.setVisible(true);
    }//GEN-LAST:event_TeacherButtonActionPerformed

    private void importStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importStudentsActionPerformed
        if (s.getTeachers() == null)
        {
            warningLabel.setVisible(true);
        }
        else
        {
            adminPanel.setVisible(false);
            StudentOpenCSV.setVisible(true);
        }
    }//GEN-LAST:event_importStudentsActionPerformed

    private void importTeachersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTeachersActionPerformed
        adminPanel.setVisible(false);
        TeacherOpenCSV.setVisible(true);
    }//GEN-LAST:event_importTeachersActionPerformed

    private void StudentFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentFileChooserActionPerformed

        if(evt.getActionCommand().equals("CancelSelection"))
        {
            adminPanel.setVisible(true);
        }
        else if(evt.getActionCommand().equals("ApproveSelection"))
        {

            PersonLinkedList students = new PersonLinkedList(); //set this to sample test case
            students.add(new Student(104,"Katie", 90));
            students.add(new Student(110, "Jessica", 80));
            s.setStudents(students);
            for (int i = 0; i < students.size(); i ++)
            {
                Student student = (Student) students.get(i);
                Teacher t = s.getTeacherFromID(student.getAssignTeachID());
                student.set_teacher(t);
                PersonLinkedList ll = t.getAssignStudents();
                ll.add(student);
                t.setAssignStudents(ll);
            }

            //SelectStudent = javax.swing.JComboBox<>(s.getStudentsForCombo());
            //set JComboBox with students' names
            
            //loop through CSV rows (get # rows as four loop bounds)
            
            //STEPS:
            //1. get file & check if CSV format
            //2. needs to check if teacherID exists (check set), use searching, if not print warning
            //3. populate respective LLs
            
            SuccessImport.setVisible(true);
            StudentOpenCSV.setVisible(false);
            updateStudentComboBox();
            studentMenu.setVisible(false); 
        }
    }//GEN-LAST:event_StudentFileChooserActionPerformed

    private void TeacherFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeacherFileChooserActionPerformed
        TeacherOpenCSV.setVisible(false);
        
        if(evt.getActionCommand().equals("CancelSelection"))
        {
            adminPanel.setVisible(true);
        }
        else if(evt.getActionCommand().equals("ApproveSelection"))
        {
            //should be able to get file regardless of location
            //https://stackoverflow.com/questions/8444508/get-the-path-of-a-directory-using-jfilechooser
            String csvFile = TeacherFileChooser.getSelectedFile().getAbsolutePath();

            //https://mkyong.com/java/how-to-read-and-parse-csv-file-in-java/
            BufferedReader br = null;
            String line = "";
            String cvsSplitBy = ","; //excel has feature, automically saves CSV excel exports with commas

            try {
                br = new BufferedReader(new FileReader(csvFile)); //creating reader
                while ((line = br.readLine()) != null) { //whlile there's something in file, gonna keep reading

                    // use comma as separator
                    String[] teacher = line.split(cvsSplitBy); //two things, name & ID, idx 0 = name, idx 1 = ID

                    System.out.println("Teacher [name= " + teacher[0] + " , ID=" + teacher[1] + "]");
                }

            } catch (FileNotFoundException e) {
                //create GUI errors using warning label (if they delete file after choosing it)
            } catch (IOException e) {
                //create GUI errors using warning label (something went wrong when reading - smth like file unable to be read)
            } finally //same if its outside try catch runs regardless
            {
                if (br != null) {
                    try {
                        br.close();
                    } catch (IOException e) {
                        //create GUI errors using warning label (something went wrong when closing - smth like file unable to close)
                        //diff error message than one above b/c not necessarily wrong action
                    }
                }
            }

            //things to look for:
            //1. get file & check if CSV format (check that right format), CSV or .txt extentions
            //2. check if everything ID - store in sets - print warning if duplicate
            //3. populate respective LLs
                        
            PersonLinkedList teachers = new PersonLinkedList();
            //test case b4 CSV importing works
            teachers.add(new Teacher("Mrs. Smith", 90));
            teachers.add(new Teacher("Mrs. Banks", 80));
            s.setTeachers(teachers);
            warningLabel.setVisible(false);
            updateTeacherComboBox();
            teacherMenu.setVisible(false); 
            SuccessImport.setVisible(true);
        }
    }//GEN-LAST:event_TeacherFileChooserActionPerformed

    private void GoHomeScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoHomeScreenActionPerformed
        SuccessImport.setVisible(false);
        firstPanel.setVisible(true);
    }//GEN-LAST:event_GoHomeScreenActionPerformed

    private void updateAssignedStudents()
    {
        if (s.getTeachers() != null && s.getStudents() != null)
        {
            assignedStudentList.setListData(((Teacher)user).getAssignedStudentsForList());
            AssignedStudentLocations.setListData(((Teacher)user).getAssignedStudentsLocations());
            VerifiedList.setListData(((Teacher)user).getAssignedStudentsVerifications());
        }   
    }
    private void manageAssignedGPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageAssignedGPActionPerformed
        SeeAssignedGPStudents.setVisible(true);
        teacherMenu.setVisible(false);
        updateAssignedStudents();
    }//GEN-LAST:event_manageAssignedGPActionPerformed

    private boolean unique_ID (int ID, javax.swing.JComboBox<String> box)
    {
        //code modified from https://kodejava.org/how-do-i-get-items-of-jcombobox/
        if (box == null)
        {
            return true;
        }
        int count = box.getItemCount();
        int[] entered_IDs;
        if (box == teacher_options)
        {
            entered_IDs = new int[count-1];            
            for (int i = 1; i < count; i++) { //skipping "no teacher" option in combo
                if (box.getItemAt(i).equals("No Teacher"))
                {
                    continue;
                }
                entered_IDs[i-1]= Integer.parseInt(box.getItemAt(i));
            }
        }
        else if (box == SelectStudent || box == SelectTeacher)
        {
            entered_IDs = new int[count];
            for (int i = 0; i < count; i++) 
            { 
            String item = box.getItemAt(i);
            String idParse = item.substring(0,item.indexOf(":"));
            entered_IDs[i]= Integer.parseInt(idParse);
            }
        }
        else
        {
            entered_IDs = new int[count]; //init to rando amount 
        }
        for (int i = 0; i < entered_IDs.length; i++)
        {
            if(ID == entered_IDs[i])
            {
                return false;
            }
        }
        return true;
    }
            
    private void teacher_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacher_optionsActionPerformed
        try
        {
            deselectionNotice.setVisible(false);
            why_teacher_txt.setText("");
            String selectedStr = "" + teacher_options.getSelectedItem();
            String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
            int visiTeacherID = Integer.parseInt(idParse);
            Teacher tSel = s.getTeacherFromID(visiTeacherID);
            if (tSel.add_student((Student) user))
            {
                successSelectNotice.setVisible(true);
                
            }
            else
            {
                capacityFullNotice.setVisible(true);
                successSelectNotice.setVisible(false);
            }
        }
        catch(StringIndexOutOfBoundsException e)
        {
            if (((Student)user).getVisiTeacher() != null)
            {
                ((Student)user).getVisiTeacher().remove_student((Student)user);
                ((Student)user).deselect_teacher();   
                successSelectNotice.setVisible(false);
                deselectionNotice.setVisible(true);
                //update for assigned GP teacher

            }
        }
    }//GEN-LAST:event_teacher_optionsActionPerformed

    private void GoHomeScreenStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoHomeScreenStudentActionPerformed
        successSelectNotice.setText("You are able to visit that teacher"); //making it go back to normal
        studentMenu.setVisible(false);
        firstPanel.setVisible(true);
    }//GEN-LAST:event_GoHomeScreenStudentActionPerformed

    private void GoHomeScreenStudentPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoHomeScreenStudentPanelActionPerformed
        studentPanel.setVisible(false);
        firstPanel.setVisible(true);
    }//GEN-LAST:event_GoHomeScreenStudentPanelActionPerformed

    private void GoHomeScreenTeacherPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoHomeScreenTeacherPanelActionPerformed
        teacherPanel.setVisible(false);
        firstPanel.setVisible(true);
    }//GEN-LAST:event_GoHomeScreenTeacherPanelActionPerformed

    private void GoHomeScreenTeacherMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoHomeScreenTeacherMenuActionPerformed
        teacherMenu.setVisible(false);
        firstPanel.setVisible(true);
    }//GEN-LAST:event_GoHomeScreenTeacherMenuActionPerformed

    private void GoBackOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoBackOptionsActionPerformed
        teacherMenu.setVisible(true);
        SeeVisitingGPStudents.setVisible(false);
    }//GEN-LAST:event_GoBackOptionsActionPerformed

    private void checkStudent3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent3ActionPerformed
        String selectedStr = "" + checkStudent3.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent3ActionPerformed

    private void checkStudent2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent2ActionPerformed
        String selectedStr = "" + checkStudent2.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent2ActionPerformed

    private void checkStudent1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent1ActionPerformed
        String selectedStr = "" + checkStudent1.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent1ActionPerformed

    private void checkStudent4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent4ActionPerformed
        String selectedStr = "" + checkStudent4.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent4ActionPerformed

    private void checkStudent5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent5ActionPerformed
        String selectedStr = "" + checkStudent5.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent5ActionPerformed

    private void checkStudent6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent6ActionPerformed
        String selectedStr = "" + checkStudent6.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent6ActionPerformed

    private void checkStudent7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent7ActionPerformed
        String selectedStr = "" + checkStudent7.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent7ActionPerformed

    private void checkStudent8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent8ActionPerformed
        String selectedStr = "" + checkStudent8.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent8ActionPerformed

    private void checkStudent9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent9ActionPerformed
        String selectedStr = "" + checkStudent9.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent9ActionPerformed

    private void checkStudent10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudent10ActionPerformed
        String selectedStr = "" + checkStudent10.getText();
        String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
        s.getStudentFromID(Integer.parseInt(idParse)).setVerified(true);
    }//GEN-LAST:event_checkStudent10ActionPerformed

    private void noMovementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noMovementActionPerformed
        //check if any assigned students are moving
        
    }//GEN-LAST:event_noMovementActionPerformed

    private void GoBackOptions1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoBackOptions1ActionPerformed
        teacherMenu.setVisible(true);
        SeeAssignedGPStudents.setVisible(false);
    }//GEN-LAST:event_GoBackOptions1ActionPerformed
    
    public void updateStudentComboBox()
    {
        //used: https://stackoverflow.com/questions/43029262/java-jcombobox-incompatible-types-cannot-be-converted-to-string
        String[] students = s.getStudentsForCombo();
        for(int i = 0; i < students.length; i ++)
        {
            String selectedStr = "" + students[i];
            String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
            if (unique_ID(Integer.parseInt(idParse), SelectStudent))
            {
                SelectStudent.insertItemAt(students[i], 0); //won't auto-select
            }
        }
    }
    
    public void updateTeacherComboBox()
    {
        String[] teachers = s.getTeachersForCombo();
        for(int i = 0; i < teachers.length; i ++)
        {
            String selectedStr = "" + teachers[i];
            String idParse = selectedStr.substring(0,selectedStr.indexOf(":"));
            if (unique_ID(Integer.parseInt(idParse), SelectTeacher))
            {
                SelectTeacher.insertItemAt(teachers[i], 0);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstScreen().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminButton;
    private javax.swing.JList<String> AssignedStudentLocations;
    private javax.swing.JLabel AssignedStudents;
    private javax.swing.JFrame FirstScreenStudent;
    private javax.swing.JButton GoBackOptions;
    private javax.swing.JButton GoBackOptions1;
    private javax.swing.JButton GoHomeScreen;
    private javax.swing.JButton GoHomeScreenStudent;
    private javax.swing.JButton GoHomeScreenStudentPanel;
    private javax.swing.JButton GoHomeScreenTeacherMenu;
    private javax.swing.JButton GoHomeScreenTeacherMenu1;
    private javax.swing.JButton GoHomeScreenTeacherPanel;
    private javax.swing.JList<String> ListReasons;
    private javax.swing.JLabel ProgramTitle;
    private javax.swing.JScrollPane ReasonsScroll;
    private javax.swing.JPanel SeeAssignedGPStudents;
    private javax.swing.JPanel SeeVisitingGPStudents;
    private javax.swing.JComboBox<String> SelectStudent;
    private javax.swing.JComboBox<String> SelectTeacher;
    private javax.swing.JLabel SelectText;
    private javax.swing.JButton StudentButton;
    private javax.swing.JButton StudentButton1;
    private javax.swing.JFileChooser StudentFileChooser;
    private javax.swing.JFrame StudentFirstScreen;
    private javax.swing.JPanel StudentOpenCSV;
    private javax.swing.JPanel SuccessImport;
    private javax.swing.JLabel SuccessImportTxt;
    private javax.swing.JButton TeacherButton;
    private javax.swing.JFileChooser TeacherFileChooser;
    private javax.swing.JPanel TeacherOpenCSV;
    private javax.swing.JList<String> VerifiedList;
    private javax.swing.JScrollPane VerifiedScrollPane;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JScrollPane assignedPresent;
    private javax.swing.JList<String> assignedStudentList;
    private javax.swing.JScrollPane assignedStudentScroll;
    private javax.swing.JLabel capacityFullNotice;
    private javax.swing.JLabel capacityTooLargeLabel;
    private javax.swing.JCheckBox checkStudent1;
    private javax.swing.JCheckBox checkStudent10;
    private javax.swing.JCheckBox checkStudent2;
    private javax.swing.JCheckBox checkStudent3;
    private javax.swing.JCheckBox checkStudent4;
    private javax.swing.JCheckBox checkStudent5;
    private javax.swing.JCheckBox checkStudent6;
    private javax.swing.JCheckBox checkStudent7;
    private javax.swing.JCheckBox checkStudent8;
    private javax.swing.JCheckBox checkStudent9;
    private javax.swing.JLabel chooseTeacherTxt;
    private javax.swing.JLabel deselectionNotice;
    private javax.swing.JTextField enter_capacity;
    private javax.swing.JLabel explainMovingTxt;
    private javax.swing.JPanel firstPanel;
    private javax.swing.JLabel guidingtxt1;
    private javax.swing.JButton importStudents;
    private javax.swing.JButton importTeachers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton manageAssignedGP;
    private javax.swing.JCheckBox noMovement;
    private javax.swing.JLabel progTitle;
    private javax.swing.JLabel prog_title;
    private javax.swing.JLabel prog_title_txt;
    private javax.swing.JLabel program_txt_title;
    private javax.swing.JButton seeVisibleGP;
    private javax.swing.JLabel selectText;
    private javax.swing.JLabel selectTxt;
    private javax.swing.JLabel selectingAdminOption;
    private javax.swing.JLabel set_capacity_txt;
    private javax.swing.JPanel studentMenu;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JLabel studentsLocations;
    private javax.swing.JLabel successSelectNotice;
    private javax.swing.JPanel teacherMenu;
    private javax.swing.JPanel teacherPanel;
    private javax.swing.JComboBox<String> teacher_options;
    private javax.swing.JLabel title;
    private javax.swing.JLabel verifiedStatus;
    private javax.swing.JList<String> visiStudentList;
    private javax.swing.JScrollPane visiStudentScroll;
    private javax.swing.JLabel warningLabel;
    private javax.swing.JTextField why_teacher_txt;
    // End of variables declaration//GEN-END:variables
}
//TODO
//1. no movement teacher option (program button - almost opposite of deselect)
//2. CSV work (file reading --> need help with this tonight with adviser) @ 7 pm
//   - figure out how to parse data based on what I can do